services:
  agent:
    command: sh -c 'bin/wait && python3 -m core.run -ch http_client --response-logger --debug'
    build:
      context: ./
      dockerfile: dockerfile_agent
    ports:
      - 4242:4242
    environment:
      WAIT_HOSTS: "rule_based_selector:8002, cobotqa:8001, cobot_topics:8003, transfertransfo:8007,
        toxic_classification:8013, sentrewrite:8017, ner:8021, sentiment_classification:8024,
        attitude_classification:8025, movie_skill:8023"
      WAIT_HOSTS_TIMEOUT: 480
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu != true
  rule_based_selector:
    build:
      context: ./skill_selectors/rule_based_selector
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8002
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  cobotqa:
    build:
      context: ./skills/CoBotQA/
    environment:
      - ASYNC_SIZE=20
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8001 -t 15
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  cobot_topics:
    build:
      context: ./annotators/CoBotTopicClassification/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8003 -t 15
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  cobot_offensiveness:
    build:
      context: ./annotators/CoBotOffensiveSpeechClassification/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8005 -t 15
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  cobot_dialogact:
    build:
      context: ./annotators/CoBotDialogActClassification/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8006 -t 15
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  transfertransfo:
    build:
      context: ./skills/transfertransfo/
    environment:
      DEVICE: cuda
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8007 -t 60
    volumes: []
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu == true
  retrieval_chitchat:
    build:
      context: ./skills/retrieval_chitchat/
    command: uvicorn server:app --host 0.0.0.0 --port 8015
    volumes: []
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu != true
  program_y:
    build:
      context: ./skills/program-y/
    working_dir: /src/dream_aiml/scripts/xnix
    command: ./sanic.sh
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  personality_catcher:
    build:
      context: ./skills/personality_catcher/
    command: uvicorn server:app --host 0.0.0.0 --port 8010
    volumes: []
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  sentseg:
    build:
      context: ./annotators/SentSeg/
    command: bash -c "./setup.sh && gunicorn --workers=1 server:app -b 0.0.0.0:8011 -t 100"
    volumes: []
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  convers_evaluation_selector:
    build:
      context: ./response_selectors/convers_evaluation_based_selector/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8009 -t 15
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  toxic_classification:
    build:
      args:
        skill_endpoint: toxicity_annotations
        skillconfig: annotators/DeepPavlovToxicClassification/toxic_classification.json
        skillhost: 0.0.0.0
        skillport: 8013
      context: ./
      dockerfile: dp/dockerfile_skill_gpu
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu == true
  sentiment_classification:
    build:
      args:
        skill_endpoint: sentiment_annotations
        skillconfig: annotators/DeepPavlovSentimentClassification/sentiment_yelp_conv_bert.json
        skillhost: 0.0.0.0
        skillport: 8024
      context: ./
      dockerfile: dp/dockerfile_skill_gpu
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu == true
  sentrewrite:
    build:
      context: ./annotators/SentRewrite/
    command: bash -c "./setup.sh && gunicorn --workers=1 server:app -b 0.0.0.0:8017 -t 60"
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  intent_responder:
    build:
      context: ./skills/IntentResponder/
    command: gunicorn --workers=1 --name=responder --bind 0.0.0.0:8012 --timeout=100 server:app
    volumes: []
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  intent_catcher:
    build:
      context: ./annotators/IntentCatcher/
    command: gunicorn --workers=1 --name=catcher --bind 0.0.0.0:8014 --timeout=100 server:app
    volumes: []
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
      resources:
        limits:
          memory: 6G
  blacklisted_words:
    build:
      context: ./annotators/BlacklistedWordsDetector/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8018
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  dummy_skill:
    build:
      context: ./skills/dummy_skill/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8019
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  program_y_dangerous:
    build:
      context: ./skills/program-y-dangerous/
    working_dir: /src/dream_aiml/scripts/xnix
    command: ./sanic.sh
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  cobot_nounphrases:
    build:
      context: ./annotators/nounphrases/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8016
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  movie_skill:
    build:
      context: ./skills/movie_skill/
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8023 --timeout=300
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
      resources:
        limits:
          memory: 6G
  ner:
    build:
      context: ./annotators/NER/
    environment:
      DEVICE: cuda
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8021 -t 100
    volumes: []
    tty: true
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  attitude_classification:
    build:
      args:
        skill_endpoint: attitude_annotations
        skillconfig: annotators/DeepPavlovAttitudeClassification/amazon_reviews_bert.json
        skillhost: 0.0.0.0
        skillport: 8025
      context: ./
      dockerfile: dp/dockerfile_skill_gpu
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.with_gpu == true
  alice:
    build:
      context: ./skills/ALICEChatAPI/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8000
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  tfidf_retrieval:
    build:
      context: ./
      dockerfile: skills/tfidf_retrieval/Dockerfile
    command: bash -c " gunicorn --workers=1 server:app -b 0.0.0.0:8028"
    volumes: []
    deploy:
      mode: replicated
      replicas: 4
      placement:
        constraints:
          - node.labels.with_gpu != true
  personal_info_skill:
    build:
      context: ./skills/personal_info_skill/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8030
    volumes: []
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  asr:
    build:
      context: ./annotators/asr/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8031
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  misheard_asr:
    build:
      context: ./skills/misheard_asr/
    command: gunicorn --workers=4 server:app -b 0.0.0.0:8033
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
  book_skill:
    build:
      context: ./skills/book_skill/
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8032
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.labels.with_gpu != true
version: '3.7'
