services:
  agent:
    image: ${DOCKER_REGISTRY}/agent
    env_file: [.env.staging]
  cobotqa:
    image: ${DOCKER_REGISTRY}/cobotqa
    env_file: [.env.staging]
  alice:
    image: ${DOCKER_REGISTRY}/alice
    env_file: [.env.staging]
  aiml:
    image: ${DOCKER_REGISTRY}/aiml
    volumes: ['external-logs:/logs', 'external-deeppavlov:/root/.deeppavlov']
    env_file: [.env.staging]
  rule_based_selector:
    image: ${DOCKER_REGISTRY}/rule_based_selector
    volumes: ['external-logs:/logs', 'external-deeppavlov:/root/.deeppavlov']
    env_file: [.env.staging]
  cobot_topics:
    image: ${DOCKER_REGISTRY}/cobot_topics
    env_file: [.env.staging]
  cobot_sentiment:
    image: ${DOCKER_REGISTRY}/cobot_sentiment
    env_file: [.env.staging]
  sentseg:
    image: ${DOCKER_REGISTRY}/sentseg
    env_file: [.env.staging]
  cobot_offensiveness:
    image: ${DOCKER_REGISTRY}/cobot_offensiveness
    env_file: [.env.staging]
  cobot_dialogact:
    image: ${DOCKER_REGISTRY}/cobot_dialogact
    env_file: [.env.staging]
  transfertransfo:
    image: ${DOCKER_REGISTRY}/transfertransfo
    env_file: [.env.staging]
  convers_evaluation_selector:
    image: ${DOCKER_REGISTRY}/convers_evaluation_selector
    env_file: [.env.staging]
  personality_catcher:
    image: ${DOCKER_REGISTRY}/personality_catcher
    env_file: [.env.staging]
  program_y:
    image: ${DOCKER_REGISTRY}/program_y
    env_file: [.env.staging]
  mongo:
    volumes:
      - external-mongo-db:/root/data/db
volumes:
  external-logs:
  external-deeppavlov:
  external-mongo-db:
version: '3.7'
